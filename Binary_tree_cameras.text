class Solution {
    int cameras;
    public int minCameraCover(TreeNode root) {
        // do it on your own because you could not do it last time;
        if(root.left == null&& root.right == null)return 1;
        cameras = 0;
      dfs(root,null);
        return cameras;
       
       
        
    }
    public void dfs(TreeNode root,TreeNode parent){
        if(root==null)return;
        dfs(root.left,root);
        dfs(root.right,root);
        if(root.left == null&&root.right == null)return ;
        if(parent==null&&root.val!=-1||(root.left!=null)&&root.left.val!=-1||(root.right!=null)&&root.right.val!=-1){
            cameras++;
            root.val = -1;
            if(parent!=null){
            parent.val = -1;
            }
            if(root.left!=null)root.left.val = -1;
            if(root.right!=null)root.right.val = -1;
        }

   
    }
}