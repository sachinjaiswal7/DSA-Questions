class Solution {
    public List<List<Integer>> kSmallestPairs(int[] nums1, int[] nums2, int k) {
        
        // do it again because you couldn't do it on your own 
        List<List<Integer>>ans = new ArrayList<>();
        PriorityQueue<int[]>pq = new PriorityQueue<>((a,b)->(a[0]+a[1]-b[0]-b[1]));
        for(int i =0;i<nums2.length&&i<k;i++){
            pq.add(new int[]{nums1[0],nums2[i],0});
        }
        while(k-->0 && !pq.isEmpty()){
            int[]arr = pq.poll();
            ans.add(Arrays.asList(arr[0],arr[1]));
            if(arr[2] == nums1.length-1)continue;
            pq.offer(new int[]{nums1[arr[2]+1],arr[1],arr[2]+1});
        }
        return ans;
        
    }
}